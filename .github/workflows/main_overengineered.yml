# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app with React to Azure Web App - overengineered

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js for React build
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Use the appropriate version for your React app

          
      - name: Lint and Fix
        run: npm run lint -- --fix
      # Step 3: Install and build React app
      - name: Install and Build React App
        working-directory: .
        run: |
          npm install
          npm run build

      # Step 4: Copy React build to .NET wwwroot
      - name: Copy React Build to .NET wwwroot
        run: |
          mkdir -p OverEngineeringAnalyzer/wwwroot
          cp -r react-app-folder/build/* OverEngineeringAnalyzer/wwwroot/

      # Step 5: Set up .NET Core
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # Step 6: Build and publish .NET app
      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      # Step 7: Upload artifact for deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      # Step 8: Download artifact from build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      # Step 9: Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8B13C72BCA5D4B69AB88B4BDB6FF6AEF }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B467ACD660A04FC798E85B3FC5027D55 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_64DA73D354794DBF9D8DC65BB9BEC54E }}

      # Step 10: Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'overengineered'
          slot-name: 'Production'
          package: .
